---
apiVersion: v1
kind: Namespace
metadata: 
  name: codeserver-ns
---
apiVersion: v1 
kind: ConfigMap 
metadata: 
  name: codeserver-cm
  namespace: codeserver-ns
  labels: 
    app: codeserver 
    name: codeserver-cm
data: 
  TZ: Asia/Singapore
  DEFAULT_WORKSPACE: /config/workspace
  PROXY_DOMAIN: codeserver.104.248.97.44.nip.io
---
apiVersion: v1
kind: Secret
metadata: 
  name: codeserver-secret
  namespace: codeserver-ns
  labels: 
    app: codeserver 
    name: codeserver-secret
type: Opaque # general secret
data: 
  # cannot type in pure string only base64
  PASSWORD: cGFzc3dvcmQ=
  SUDO_PASSWORD: cGFzc3dvcmQ=
---
apiVersion: v1 
kind: PersistentVolumeClaim 
metadata: 
  name: codeserver-volume-pvc
  namespace: codeserver-ns
  labels: 
    app: codeserver
    name: codeserver-volume-pvc
spec: 
  storageClassName: do-block-storage-retain
  accessModes: # an array can define a number of styles that fit ur use case, will pick one
    - ReadWriteOnce 
  resources: 
    requests: 
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: codeserver-deploy
  namespace: codeserver-ns
  labels: 
    app: codeserver
    name: codeserver-deploy
spec: 
  replicas: 1
  selector: 
    matchLabels: # pods that belong to this deployment has the following labels (helps kubernetes to determine which ports belong to this deployment)
      app: codeserver
      name: codeserver-app
  template: # no header needed here
    # pod template
    metadata: 
      name: codeserver-app
      namespace: codeserver-ns # implied cause it is under the deploy, if set, must be the same namespace. 
      labels: # organisation needs to set a label.
        app: codeserver 
        name: codeserver-app
    spec:
      volumes: 
        # what is the difference when attaching as volume and attaching as env variable
        # env variable is accessed when the app is running as env variable
        # volume is accessed as a file during the process. 
        # - name: cm-vol 
        #   configMap:
        #     name: codeserver-cm 
        # - name: secret-vol
        #   secret: 
        #     secretName: codeserver-secret
        - name: workspace-vol
          persistentVolumeClaim:
            claimName: codeserver-volume-pvc
      containers: 
        - name: codeserver-app-container
          image: linuxserver/code-server:4.89.1
          imagePullPolicy: IfNotPresent # what to do when kubernetes wants to pull the image. --> can set to Never but node MUST have image preloaded.
          ports: 
            - name: codeserver-port
              containerPort: 8443 # container port not the port on your local cluster. 
          envFrom: 
            - configMapRef:
                name: codeserver-cm
            - secretRef: 
                name: codeserver-secret
          volumeMounts: 
            # - name: cm-vol
            #   mountPath: /opt/configmap
            # - name: secret-vol 
            #   mountPath: /opt/secrets
            #   readOnly: true
            - name: workspace-vol
              mountPath: /config/workspace
          resources:
            # if only requests set, this pod will be the second one to go.
            # requests: 
            #   # lower limit
            #   cpu: 16m # 1vcpu = 1000m 
            #   memory: 16Mi
            # limits: 
            #   cpu: 32m # spikes of cpu is still acceptable but consistent one is not
            #   memory: 32Mi # memory cannot exceed this, else the container will be killed.
            requests: 
              # lower limit
              cpu: 200m # 1vcpu = 1000m 
              memory: 256Mi
            # limits: 
            #   cpu: 200m # spikes of cpu is still acceptable but consistent one is not
            #   memory: 256Mi # memory cannot exceed this, else the container will be killed.
            # request and limit defined --> QoS = burstable 
            # request and limit same --> QoS = guaranteed.

---
apiVersion: v1
kind: Service 
metadata: 
  name: codeserver-svc 
  namespace: codeserver-ns
  labels: 
      app: codeserver
      name: codeserver-svc 
spec: 
  type: ClusterIP
  selector: 
    app: codeserver
    name: codeserver-app
  ports: 
    - name: service-port
      port: 8443
      targetPort: codeserver-port
--- 
apiVersion: networking.k8s.io/v1
kind: Ingress 
metadata: 
  name: codeserver-ing 
  namespace: codeserver-ns
  labels: 
    app: codeserver
    name: codeserver-ing 
spec: 
  ingressClassName: nginx 
  rules: 
    - host: codeserver.104.248.97.44.nip.io
      http: 
        paths: 
          - path: /
            pathType: Prefix 
            backend: 
              service: 
                name: codeserver-svc 
                port: 
                  number: 8443
# can add tlssecret into here to enable the host to be https. 